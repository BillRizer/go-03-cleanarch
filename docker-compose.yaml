version: '3'

services:

  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
      - "8080:8080"
      - "3000:3000"
    volumes:
      - ./app:/app
    env_file:
      - ./app/.env
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped

  mysql:
    image: mysql:5.7
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: orders
      MYSQL_PASSWORD: root
    ports:
      - 3306:3306
    volumes:
      - .docker/mysql:/var/lib/mysql
      - ./migrations:/migrations
    
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 2s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  # migrate:
  #   image: migrate/migrate
  #   command: -path=/migrations -database "mysql://${DB_USER}:${DB_PASSWORD}@tcp(${DB_HOST}:${DB_PORT})/${DB_NAME}" up
  #   depends_on:
  #     mysql:
  #       condition: service_healthy
  #   volumes:
  #     - ./migrations:/migrations


  #   environment:
  #     DB_DRIVER: ${DB_DRIVER}
  #     DB_HOST: ${DB_HOST}
  #     DB_PORT: ${DB_PORT}
  #     DB_USER: ${DB_USER}
  #     DB_PASSWORD: ${DB_PASSWORD}
  #     DB_NAME: ${DB_NAME}
